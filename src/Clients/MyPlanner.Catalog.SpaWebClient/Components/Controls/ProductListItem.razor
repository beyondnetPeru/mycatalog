@using Microsoft.AspNetCore.Components.Forms;
@using MyPlanner.Catalog.SpaWebClient.Components.Pages

@rendermode InteractiveServer

@inject NavigationManager NavigationManager;

@if (product != null)
{
    <div class="col">
    <li @key="product.Id">
        <div>
            @product.Name
        </div>
        <div>
            <button type="button" class="btn btn-link" @onclick="EditProduct">Edit</button>
        </div>
        <div>            
            <EditForm Model="product" OnValidSubmit="() => DeleteProduct(product.Id)">
                <button type="submit" class="btn btn-link">Delete</button>
            </EditForm>
        </div>

        @if (editingProducts){
            <EditProduct id="@product.Id" />
        }
    </li>
    </div>
}

@code {

    [Parameter]
    public Product? product { get; set; }

    private bool editingProducts { get; set; } = false;

    private void DeleteProduct(string id)
    {
        if (string.IsNullOrWhiteSpace(id))
        {
            throw new ArgumentException($"'{nameof(id)}' cannot be null or whitespace.", nameof(id));
        }

        ProductsRepository.DeleteProduct(id);
        NavigationManager.NavigateTo("/products", true);
    }

    private void EditProduct()
    {
        this.editingProducts = !this.editingProducts;
    } 

    protected override void OnParametersSet()
    {
        product = product;
    }
}
